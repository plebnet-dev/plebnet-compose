
import:
  dcc: dash.dcc
  html: dash.html
  dbc: dash_bootstrap_components
  daq: dash_daq

external_stylesheets:
  - https://codepen.io/chriddyp/pen/bWLwgP.css
  - https://www.w3schools.com/w3css/4/w3.css
  - https://cdn.jsdelivr.net/npm/bootswatch@5.1.3/dist/slate/bootstrap.min.css

external_scripts:
  - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-MML-AM_CHTML

app:
  dash.Dash:
    external_stylesheets: ${external_stylesheets}
    external_scripts: ${external_scripts}
    title: db comms
    suppress_callback_exceptions: False

intro: "
## SQ DB comms
 
A simple (?) flask dashboard that illustrates connecting to an sql db from a container
"

layout:
  dbc.Container:
    children:
    - html.Br:
    - dcc.Location:
        id: url
    - dcc.Markdown:
        children: ${intro}
    - html.Br:
    - dbc.Card:
        children:
        - html.Br:
        - dbc.Form:
            children:
            - dbc.Row:
                align: center  # This will center the columns vertically
                style: 
                  overflow: visible 
                  margin-bottom: 20px  # Adjust the value as needed for spacing
                children:
                - dbc.Col:
                    md: 2
                    children:
                    - dbc.Select:
                        id: name-dropdown
                        size: sm
                - dbc.Col:
                    md: 2
                    children:
                    - dbc.Input:
                        id: name-input
                        type: text
                        placeholder: Enter new name
                - dbc.Col:
                    md: 1
                    children:
                    - dbc.Input:
                        id: connections-input
                        type: number
                        min: 0
                        placeholder: Enter value for connections
                - dbc.Col:
                    md: 1
                    children:
                    - dbc.Input:
                        id: color-input
                        type: color
                        value: '#FFFFFF'  # Default color, optional
                - dbc.Col:
                    md: 2
                    children:
                    - dbc.Button:
                        id: submit-button
                        children: Submit
                - dbc.Col:
                    md: 2
                    children:
                    - dbc.Button:
                        id: delete-button
                        children: Delete
                        color: danger

    - html.Br:
    - dbc.Card:
        children:
        - dbc.Row:
            children:
            - dcc.Graph:
                id: node-graph
                figure:
                  layout:
                    xaxis:
                      title: 'node name'
                      title_font:
                        color: 'white'
                      tickfont:
                        color: 'white'
                    yaxis:
                      title: 'number of connections'
                      title_font:
                        color: 'white'
                      tickfont:
                        color: 'white'
                    plot_bgcolor: '#2c2c2c'
                    paper_bgcolor: '#2c2c2c'
                    title:
                      text: 'Node Connections'
                      font:
                        color: 'white'
                    font:
                      color: 'white'
    - html.Br:
    - dbc.Card:
        children:
        - html.Br:
        - dbc.Row:
            children:
            - dbc.Col:
                children:
                - dash.dash_table.DataTable:
                    id: db-table  # Define a new id for the DataTable component
                width:
                  size: 10
                  offset: 1
        - html.Br:
    - html.Div:
        id: db-update-trigger
        style:
          display: 'none'  # This hides the div




callbacks:
  update_dropdown_names:
    input:
      - id: url  # Assuming you want to trigger this when the URL changes
        attr: pathname
      - id: db-update-trigger
        attr: children
    output:
      - id: name-dropdown
        attr: options
      - id: name-dropdown
        attr: value
    callback: callbacks.update_dropdown_options_value

  update_input_name:
    input:
      - id: name-dropdown
        attr: value
    output:
      - id: name-input
        attr: value
    callback: callbacks.update_input_name

  update_connections_value:
    input:
      - id: name-input
        attr: value
    output:
      - id: connections-input
        attr: value
    callback: callbacks.update_connections_value

  update_color_value:
    input:
      - id: name-input
        attr: value
    output:
      - id: color-input
        attr: value
    callback: callbacks.update_color_value

  update_or_delete_entry:
    input:
      - id: submit-button
        attr: n_clicks
      - id: delete-button
        attr: n_clicks
    state:
      - id: name-input
        attr: value
      - id: connections-input
        attr: value
      - id: color-input
        attr: value
    output:
      - id: db-update-trigger
        attr: children
    callback: callbacks.update_or_delete_entry

  update_db_table:
    input:
      - id: url
        attr: pathname
      - id: db-update-trigger
        attr: children
    output:
      - id: db-table
        attr: data
    callback: callbacks.update_db_table



  update_graph:
    input:
      - id: url
        attr: pathname
      - id: db-update-trigger
        attr: children  # Triggered by the unique value from update_database
    output:
      - id: node-graph  # Replace with the id of your graph component
        attr: figure
    callback: callbacks.update_graph



app.run_server:
  host: '0.0.0.0'
  port: 8050
  # ssl_context: adhoc
  # ssl_context:
  #   - cert.pem
  #   - key.pem
  extra_files:
    - app.yaml
    - app.py
    - callbacks.py
  debug: True # ${oc.env:DASH_DEBUG}
  dev_tools_hot_reload: True # ${oc.env:DEV_TOOLS_HOT_RELOAD}


