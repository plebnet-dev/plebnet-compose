
import:
  dcc: dash.dcc
  html: dash.html
  dbc: dash_bootstrap_components
  daq: dash_daq

external_stylesheets:
  - https://codepen.io/chriddyp/pen/bWLwgP.css
  - https://www.w3schools.com/w3css/4/w3.css
  # - https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css
  # - https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css
  - https://cdn.jsdelivr.net/npm/bootswatch@5.1.3/dist/slate/bootstrap.min.css

external_scripts:
  - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-MML-AM_CHTML
  # - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML
  # - https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.0.0/es5/latest?tex-mml-chtml.js

app:
  dash.Dash:
    external_stylesheets: ${external_stylesheets}
    external_scripts: ${external_scripts}
    title: db comms
    suppress_callback_exceptions: False

layout:
  dbc.Container:
    children:
    - dcc.Location:
        id: url
    - html.Br:
    - dbc.Row:
        children:
        - dbc.Col:
            children:
            - dcc.Dropdown:
                id: name-dropdown
        - dbc.Col:
            children:
            - dcc.Input:
                id: name-input
                type: text
                placeholder: Enter new name
        - dbc.Col:
            children:
            - dcc.Input:
                id: connections-input
                type: number
                min: 0
                placeholder: Enter value for connections
        - dbc.Col:
            children:
            - dbc.Button:
                id: submit-button
                children: Submit
        - dbc.Col:
            children:
            - dbc.Button:
                id: delete-button
                children: Delete
                color: danger
    - html.Br:
    - dcc.Graph:
        id: node-graph
    - html.Div:
        id: db-update-trigger
        # style:
        #   display: 'none'  # This hides the div

callbacks:
  update_dropdown_names:
    input:
      - id: url  # Assuming you want to trigger this when the URL changes
        attr: pathname
      - id: db-update-trigger
        attr: children
    output:
      - id: name-dropdown
        attr: options
      - id: name-dropdown
        attr: value
    callback: callbacks.update_dropdown_options_value

  update_input_name:
    input:
      - id: name-dropdown
        attr: value
    output:
      - id: name-input
        attr: value
    callback: callbacks.update_input_name

  update_connections_value:
    input:
      - id: name-input
        attr: value
    output:
      - id: connections-input
        attr: value
    callback: callbacks.update_connections_value

  update_database:
    input:
      - id: submit-button
        attr: n_clicks
    state:
      - id: name-input
        attr: value
      - id: connections-input
        attr: value
    output:
      - id: db-update-trigger
        attr: children  # This will hold the unique value
    callback: callbacks.update_database

  update_graph:
    input:
      - id: url
        attr: pathname
      - id: db-update-trigger
        attr: children  # Triggered by the unique value from update_database
    output:
      - id: node-graph  # Replace with the id of your graph component
        attr: figure
    callback: callbacks.update_graph


app.run_server:
  host: '0.0.0.0'
  port: 8050
  # ssl_context: adhoc
  # ssl_context:
  #   - cert.pem
  #   - key.pem
  extra_files:
    - app.yaml
    - app.py
    - callbacks.py
  debug: True # ${oc.env:DASH_DEBUG}
  dev_tools_hot_reload: True # ${oc.env:DEV_TOOLS_HOT_RELOAD}


